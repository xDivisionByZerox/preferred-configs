{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "ignorePatterns": [
    "*.js",
    "dist",
    "node_modules"
  ],
  "overrides": [
    {
      "files": [
        "**/*.e2e-spec.ts",
        "**/*.e2e-test.ts",
        "**/*.mock.ts",
        "**/*.spec.ts",
        "**/*.test.ts"
      ],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "brace-style": "off",
        "complexity": "off",
        "init-declarations": "off",
        "max-len": "off",
        "no-useless-return": "off"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "createDefaultProgram": true,
    "ecmaFeatures": {
      "arrowFunctions": true,
      "binaryLiterals": true,
      "classes": true,
      "forOf": true,
      "jsx": true,
      "spread": true,
      "templateStrings": true
    },
    "ecmaVersion": 12,
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "forbid",
        "selector": [
          "accessor",
          "variable"
        ],
        "trailingUnderscore": "forbid"
      },
      {
        "format": [
          "PascalCase",
          "camelCase"
        ],
        "leadingUnderscore": "forbid",
        "modifiers": [
          "const"
        ],
        "selector": [
          "variable"
        ],
        "trailingUnderscore": "forbid"
      },
      {
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "forbid",
        "modifiers": [
          "private"
        ],
        "prefix": [
          "$"
        ],
        "selector": "classProperty",
        "trailingUnderscore": "forbid"
      },
      {
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "I"
        ],
        "selector": "interface"
      },
      {
        "format": [
          "PascalCase"
        ],
        "leadingUnderscore": "forbid",
        "prefix": [
          "E"
        ],
        "selector": "enum",
        "trailingUnderscore": "forbid"
      },
      {
        "format": [
          "UPPER_CASE"
        ],
        "leadingUnderscore": "forbid",
        "selector": "enumMember",
        "trailingUnderscore": "forbid"
      },
      {
        "format": [
          "PascalCase"
        ],
        "leadingUnderscore": "forbid",
        "selector": "class",
        "trailingUnderscore": "forbid"
      },
      {
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "allow",
        "selector": "parameter",
        "trailingUnderscore": "forbid"
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreIIFE": true,
        "ignoreVoid": true
      }
    ],
    "@typescript-eslint/no-shadow": [
      "error",
      {
        "ignoreFunctionTypeParameterNameValueShadow": true,
        "ignoreTypeValueShadow": true
      }
    ],
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/promise-function-async": "error",
    "accessor-pairs": "error",
    "array-bracket-newline": [
      "error",
      "consistent"
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "array-callback-return": [
      "error"
    ],
    "array-element-newline": [
      "error",
      "consistent"
    ],
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "arrow-parens": "error",
    "arrow-spacing": "error",
    "block-scoped-var": "error",
    "block-spacing": "error",
    "brace-style": [
      "error",
      "1tbs"
    ],
    "callback-return": "off",
    "camelcase": "off",
    "capitalized-comments": "off",
    "class-methods-use-this": "off",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-spacing": [
      "error",
      {
        "after": true,
        "before": false
      }
    ],
    "comma-style": [
      "error",
      "last"
    ],
    "complexity": [
      "error",
      {
        "max": 10
      }
    ],
    "computed-property-spacing": [
      "error",
      "never",
      {
        "enforceForClassMembers": true
      }
    ],
    "consistent-return": [
      "error",
      {
        "treatUndefinedAsUnspecified": false
      }
    ],
    "consistent-this": "off",
    "constructor-super": "error",
    "curly": "error",
    "default-case": "error",
    "dot-location": [
      "error",
      "property"
    ],
    "dot-notation": "error",
    "eol-last": [
      "error",
      "always"
    ],
    "eqeqeq": "error",
    "for-direction": "error",
    "func-call-spacing": [
      "error",
      "never"
    ],
    "func-name-matching": [
      "error",
      "always"
    ],
    "func-names": [
      "error",
      "as-needed",
      {
        "generators": "as-needed"
      }
    ],
    "func-style": "off",
    "function-call-argument-newline": [
      "error",
      "consistent"
    ],
    "function-paren-newline": [
      "error",
      "consistent"
    ],
    "generator-star-spacing": [
      "error",
      {
        "after": false,
        "before": false
      }
    ],
    "getter-return": [
      "error",
      {
        "allowImplicit": false
      }
    ],
    "global-require": "error",
    "guard-for-in": "error",
    "handle-callback-err": "off",
    "id-blacklist": "off",
    "id-length": "off",
    "id-match": "off",
    "implicit-arrow-linebreak": [
      "error",
      "beside"
    ],
    "indent": [
      "error",
      2,
      {
        "ignoredNodes": [
          // this statements enable the use of multiline decorators for properties
          "FunctionExpression > .params[decorators.length > 0]",
          "FunctionExpression > .params > :matches(Decorator, :not(:first-child))",
          "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
        ],
        "SwitchCase": 1
      }
    ],
    "indent-legacy": "off",
    "init-declarations": [
      "error",
      "always"
    ],
    "jsx-quotes": [
      "error",
      "prefer-single"
    ],
    "key-spacing": [
      "error",
      {
        "afterColon": true,
        "beforeColon": false,
        "mode": "strict"
      }
    ],
    "keyword-spacing": [
      "error",
      {
        "after": true,
        "before": true
      }
    ],
    "line-comment-position": [
      "error",
      {
        "position": "above"
      }
    ],
    "linebreak-style": "off",
    "lines-around-comment": [
      "error",
      {
        "afterBlockComment": false,
        "afterLineComment": false,
        "allowArrayEnd": false,
        "allowArrayStart": false,
        "allowBlockEnd": false,
        "allowBlockStart": true,
        "allowClassEnd": false,
        "allowClassStart": true,
        "allowObjectEnd": false,
        "allowObjectStart": false,
        "beforeBlockComment": true,
        "beforeLineComment": false
      }
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "max-depth": [
      "error",
      {
        "max": 2
      }
    ],
    "max-len": [
      "error",
      {
        "code": 140,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
        "tabWidth": 2
      }
    ],
    "max-params": [
      "error",
      {
        "max": 5
      }
    ],
    "max-statements-per-line": [
      "error",
      {
        "max": 2
      }
    ],
    "new-parens": [
      "error",
      "always"
    ],
    "newline-before-return": "error",
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-bitwise": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-compare-neg-zero": "error",
    "no-confusing-arrow": "error",
    "no-const-assign": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "error",
    "no-empty-function": [
      "error",
      {
        "allow": [
          "constructors"
        ]
      }
    ],
    "no-eval": "error",
    "no-extra-parens": "off",
    "no-fallthrough": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": "error",
    "no-return-await": "error",
    "no-shadow": "off",
    "no-shadow-restricted-names": "error",
    "no-tabs": "error",
    "no-trailing-spaces": [
      "error",
      {
        "ignoreComments": false,
        "skipBlankLines": false
      }
    ],
    "no-undef": "off",
    "no-undefined": "off",
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unused-expressions": "error",
    "no-unused-labels": "error",
    "no-unused-vars": "off",
    "no-useless-constructor": "off",
    "no-useless-return": "error",
    "no-var": "error",
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": [
      "error",
      "beside"
    ],
    "object-curly-newline": [
      "error",
      {
        "ExportDeclaration": {
          "consistent": true,
          "minProperties": 3,
          "multiline": true
        },
        "ImportDeclaration": "never",
        "ObjectExpression": {
          "consistent": true,
          "minProperties": 3,
          "multiline": true
        },
        "ObjectPattern": {
          "consistent": true,
          "minProperties": 4,
          "multiline": true
        }
      }
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    "object-shorthand": "error",
    "operator-linebreak": [
      "error",
      "before"
    ],
    "padded-blocks": [
      "error",
      {
        "blocks": "never",
        "classes": "always",
        "switches": "never"
      }
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": false,
        "allowUnboundThis": true
      }
    ],
    "prefer-const": "error",
    "prefer-destructuring": "off",
    "prefer-numeric-literals": "off",
    "prefer-promise-reject-errors": [
      "error",
      {
        "allowEmptyReject": false
      }
    ],
    "prefer-reflect": "off",
    "prefer-spread": "error",
    "prefer-template": "error",
    "quotes": [
      "error",
      "single"
    ],
    "radix": "error",
    "require-await": "off",
    "rest-spread-spacing": [
      "error",
      "never"
    ],
    "semi": "error",
    "semi-style": [
      "error",
      "last"
    ],
    "sort-imports": "off",
    "space-before-blocks": [
      "error",
      "always"
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "space-infix-ops": "error",
    "space-unary-ops": [
      "error",
      {
        "nonwords": false,
        "words": true
      }
    ],
    "switch-colon-spacing": [
      "error",
      {
        "after": true,
        "before": false
      }
    ],
    "template-curly-spacing": [
      "error",
      "never"
    ],
    "unicode-bom": [
      "error",
      "never"
    ],
    "use-isnan": "error",
    "vars-on-top": "error",
    "wrap-iife": [
      "error",
      "inside"
    ],
    "wrap-regex": "error",
    "yield-star-spacing": [
      "error",
      "after"
    ]
  }
}